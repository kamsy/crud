{"version":3,"sources":["reducers/reducers.js","arVariables.js","actions/index.js","actions/addBook_action.js","actions/updateBook_action.js","actions/deleteBook_action.js","actions/pushUpdate.js","components/AddBook.js","components/Modal.js","components/Book.js","components/UpdateBook.js","components/AllBooks.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","arguments","length","undefined","action","payload","type","concat","filter","book","isbn","id","map","Object","objectSpread","editing","_payload$data","data","author","title","pages","genre","Actions","addBook","updateBook","deleteBook","pushUpdate","Addbook","handleSubmit","e","preventDefault","_this$state","_this","props","dispatch","setState","handleAuthor","target","value","handleTitle","handlePages","handleNum","handleGenre","_this$state2","this","react_default","a","createElement","className","onSubmit","required","onChange","placeholder","Component","connect","Modal","esc","key","close","document","addEventListener","_this$props","modal","open","Books","clicked","_this$props$book","onClick","components_Modal","Updatebook","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","AllBooks","books","UpdateBook","Book","App","AddBook","components_AllBooks","Boolean","window","location","hostname","match","store","createStore","reducers","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wSAsCeA,EApCC,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5BE,EAAkBD,EAAlBC,QACR,OAD0BD,EAATE,MAEb,ICLW,MDMP,OAAON,EAAMO,OAAO,CAACF,IACzB,ICLc,SDMV,OAAOL,EAAMQ,OAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASL,EAAQM,KACtD,ICRc,SDSV,OAAOX,EAAMY,IAAI,SAAAH,GAAI,OACjBA,EAAKC,OAASL,EAAQM,GAAtBE,OAAAC,EAAA,EAAAD,CAAA,GAEaJ,EAFb,CAGUM,SAAUN,EAAKM,UAEnBN,IAEd,ICfY,ODeZ,IAAAO,EAC4CX,EAAQY,KAAxCC,EADZF,EACYE,OAAQC,EADpBH,EACoBG,MAAOC,EAD3BJ,EAC2BI,MAAOC,EADlCL,EACkCK,MAC9B,OAAOrB,EAAMY,IAAI,SAAAH,GAAI,OACjBA,EAAKC,OAASL,EAAQM,GAAtBE,OAAAC,EAAA,EAAAD,CAAA,GAEaJ,EAFb,CAGUS,OAAQA,EACRC,MAAOA,EACPE,MAAOA,EACPD,MAAOA,EACPL,SAAUN,EAAKM,UAEnBN,IAGd,QACI,OAAOT,uCE7BNsB,EAAU,CACnBC,QCJY,SAAAlB,GACZ,MAAO,CACHC,KFJW,MEKXD,YDEJmB,WELe,SAAAnB,GACf,MAAO,CACHC,KHHc,SGIdD,YFGJoB,WGNe,SAAApB,GACf,MAAO,CACHC,KJFc,SIGdD,YHIJqB,WIPe,SAAArB,GACf,MAAO,CACHC,KLDY,OKEZD,aCAFsB,oNACF3B,MAAQ,CACJkB,OAAQ,GACRC,MAAO,GACPC,MAAO,GACPV,KAAM,GACNW,MAAO,MAGXO,aAAe,SAAAC,GACXA,EAAEC,iBADc,IAAAC,EAE8BC,EAAKhC,MAC7CiB,EAAO,CACTC,OAJYa,EAERb,OAGJC,MALYY,EAEAZ,MAIZC,MANYW,EAEOX,MAKnBV,KAPYqB,EAEcrB,KAM1BW,MARYU,EAEoBV,MAOhCN,SAAS,GAEbiB,EAAKC,MAAMC,SAASZ,EAAQC,QAAQN,IACpCe,EAAKG,SAAS,CACVjB,OAAQ,GACRC,MAAO,GACPC,MAAO,GACPV,KAAM,GACNW,MAAO,QAIfe,aAAe,SAAAP,GACXG,EAAKG,SAAS,CACVjB,OAAQW,EAAEQ,OAAOC,WAIzBC,YAAc,SAAAV,GACVG,EAAKG,SAAS,CACVhB,MAAOU,EAAEQ,OAAOC,WAIxBE,YAAc,SAAAX,GACVG,EAAKG,SAAS,CACVf,MAAOS,EAAEQ,OAAOC,WAIxBG,UAAY,SAAAZ,GACRG,EAAKG,SAAS,CACVzB,KAAMmB,EAAEQ,OAAOC,WAIvBI,YAAc,SAAAb,GACVG,EAAKG,SAAS,CACVd,MAAOQ,EAAEQ,OAAOC,iFAGf,IAAAK,EACyCC,KAAK5C,MAA3CkB,EADHyB,EACGzB,OAAQC,EADXwB,EACWxB,MAAOC,EADlBuB,EACkBvB,MAAOV,EADzBiC,EACyBjC,KAAMW,EAD/BsB,EAC+BtB,MACpC,OACIwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAKhB,cACjBiB,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOpB,EACPiC,SAAUP,KAAKR,aACfgB,YAAY,iBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOnB,EACPgC,SAAUP,KAAKL,YACfa,YAAY,gBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOlB,EACP+B,SAAUP,KAAKJ,YACfY,YAAY,gBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAO5B,EACPyC,SAAUP,KAAKH,UACfW,YAAY,OACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOjB,EACP8B,SAAUP,KAAKF,YACfU,YAAY,QACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mCA7GEM,cAoHPC,cAAQ,KAARA,CAAc3B,GC1Fd4B,oNAvBXC,IAAM,SAAA3B,GACY,WAAVA,EAAE4B,KACFzB,EAAKC,MAAMyB,4FALfC,SAASC,iBAAiB,UAAWhB,KAAKY,sCAQrC,IAAAK,EAC+CjB,KAAKX,MAAjDf,EADH2C,EACG3C,OAAQC,EADX0C,EACW1C,MAAOC,EADlByC,EACkBzC,MAAOV,EADzBmD,EACyBnD,KAAMW,EAD/BwC,EAC+BxC,MAC9ByC,GAAiB,IAFlBD,EACsCE,KAC7B,qBACd,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWc,GACZjB,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACfH,EAAAC,EAAAC,cAAA,qBAAAxC,OAAgBW,IAChB2B,EAAAC,EAAAC,cAAA,wBAAAxC,OAAmBY,IAEnB0B,EAAAC,EAAAC,cAAA,kBAAAxC,OAAaa,IACbyB,EAAAC,EAAAC,cAAA,kBAAAxC,OAAaG,IACbmC,EAAAC,EAAAC,cAAA,mBAAAxC,OAAcc,aArBdgC,cCGdW,oNACFhE,MAAQ,CACJ+D,MAAM,KAEVE,QAAU,WACNjC,EAAKG,SAAS,CACV4B,MAAM,OAIdL,MAAQ,WACJ1B,EAAKG,SAAS,CACV4B,MAAM,6EAIL,IAAAG,EACyCtB,KAAKX,MAAMxB,KAAjDS,EADHgD,EACGhD,OAAQC,EADX+C,EACW/C,MAAOC,EADlB8C,EACkB9C,MAAOV,EADzBwD,EACyBxD,KAAMW,EAD/B6C,EAC+B7C,MAE5Ba,EAAaU,KAAKX,MAAlBC,SACR,OACIW,EAAAC,EAAAC,cAAA,OAAKoB,QAASvB,KAAKqB,QAASjB,UAAU,aAClCH,EAAAC,EAAAC,cAAA,UAAK7B,GACL2B,EAAAC,EAAAC,cAAA,SAAI5B,GAEJ0B,EAAAC,EAAAC,cAAA,UACIC,UAAU,MACVmB,QAAS,kBAAMjC,EAASZ,EAAQG,WAAW,CAAEd,GAAID,OAFrD,eAMAmC,EAAAC,EAAAC,cAAA,UACIC,UAAU,SACVmB,QAAS,kBAAMjC,EAASZ,EAAQE,WAAW,CAAEb,GAAID,OAFrD,eAOAmC,EAAAC,EAAAC,cAACqB,EAAD,CACIL,KAAMnB,KAAK5C,MAAM+D,KACjBL,MAAOd,KAAKc,MACZxC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPV,KAAMA,EACNW,MAAOA,YA7CPgC,cAoDLC,cAAQ,KAARA,CAAcU,GCtDvBK,cACF,SAAAA,EAAYpC,GAAO,IAAAD,EAAAnB,OAAAyD,EAAA,EAAAzD,CAAA+B,KAAAyB,IACfrC,EAAAnB,OAAA0D,EAAA,EAAA1D,CAAA+B,KAAA/B,OAAA2D,EAAA,EAAA3D,CAAAwD,GAAAI,KAAA7B,KAAMX,KAWVL,aAAe,SAAAC,GACXA,EAAEC,iBADc,IAAAC,EAEwBC,EAAKhC,MACvCiB,EAAO,CACTC,OAJYa,EAERb,OAGJC,MALYY,EAEAZ,MAIZC,MANYW,EAEOX,MAKnBC,MAPYU,EAEcV,OAO9BW,EAAKC,MAAMC,SACPZ,EAAQI,WAAW,CAAEf,GAAIqB,EAAKC,MAAMxB,KAAKC,KAAMO,WAtBpCe,EA0BnBI,aAAe,SAAAP,GACXG,EAAKG,SAAS,CACVjB,OAAQW,EAAEQ,OAAOC,SA5BNN,EAgCnBO,YAAc,SAAAV,GACVG,EAAKG,SAAS,CACVhB,MAAOU,EAAEQ,OAAOC,SAlCLN,EAsCnBQ,YAAc,SAAAX,GACVG,EAAKG,SAAS,CACVf,MAAOS,EAAEQ,OAAOC,SAxCLN,EA4CnBS,UAAY,SAAAZ,GACRG,EAAKG,SAAS,CACVzB,KAAMmB,EAAEQ,OAAOC,SA9CJN,EAkDnBU,YAAc,SAAAb,GACVG,EAAKG,SAAS,CACVd,MAAOQ,EAAEQ,OAAOC,SApDL,IAAA4B,EAE+BlC,EAAKC,MAAMxB,KAAjDS,EAFOgD,EAEPhD,OAAQC,EAFD+C,EAEC/C,MAAOC,EAFR8C,EAEQ9C,MAAOV,EAFfwD,EAEexD,KAAMW,EAFrB6C,EAEqB7C,MAFrB,OAGfW,EAAKhC,MAAQ,CACTkB,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPV,KAAMA,EACNW,MAAOA,GARIW,wEAuDV,IAAAW,EACyCC,KAAK5C,MAA3CkB,EADHyB,EACGzB,OAAQC,EADXwB,EACWxB,MAAOC,EADlBuB,EACkBvB,MAAOV,EADzBiC,EACyBjC,KAAMW,EAD/BsB,EAC+BtB,MACpC,OACIwB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAME,SAAUL,KAAKhB,cACjBiB,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOpB,EACPiC,SAAUP,KAAKR,aACfgB,YAAY,iBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOnB,EACPgC,SAAUP,KAAKL,YACfa,YAAY,gBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOlB,EACP+B,SAAUP,KAAKJ,YACfY,YAAY,gBACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAO5B,EACPyC,SAAUP,KAAKH,UACfW,YAAY,OACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIG,UAAQ,EACRZ,MAAOjB,EACP8B,SAAUP,KAAKF,YACfU,YAAY,QACZ9C,KAAK,SAETuC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCA1GKM,aAqHVC,cAAQ,KAARA,CAAce,GCnHvBK,0LACO,IACGC,EAAU/B,KAAK5C,MAAf2E,MACR,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,gCAEAF,EAAAC,EAAAC,cAAA,eACK4B,EAAM/D,IAAI,SAAAH,GAAI,OACXA,EAAKM,QACD8B,EAAAC,EAAAC,cAAC6B,EAAD,CAAYnB,IAAKhD,EAAKC,KAAMD,KAAMA,IAElCoC,EAAAC,EAAAC,cAAC8B,EAAD,CAAOpB,IAAKhD,EAAKC,KAAMD,KAAMA,eAZlC4C,cAyBRC,cAJS,SAAAtD,GACpB,MAAO,CAAE2E,MAAO3E,IAGLsD,CAAyBoB,GCbzBI,0LAXP,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACgC,EAAD,MAEAlC,EAAAC,EAAAC,cAACiC,EAAD,cAPE3B,cCOE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTN,IAAMC,EAAQC,YAAYC,GAE1BC,IAASC,OACL7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUL,MAAOA,GACbzC,EAAAC,EAAAC,cAAC6C,EAAD,OAEJjC,SAASkC,eAAe,SDkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9329508f.chunk.js","sourcesContent":["import { ADD, DELETE, UPDATE, PUSH } from \"../arVariables\";\n\nconst reducer = (state = [], action) => {\n    const { payload, type } = action;\n    switch (type) {\n        case ADD:\n            return state.concat([payload]);\n        case DELETE:\n            return state.filter(book => book.isbn !== payload.id);\n        case UPDATE:\n            return state.map(book =>\n                book.isbn === payload.id\n                    ? {\n                          ...book,\n                          editing: !book.editing\n                      }\n                    : book\n            );\n        case PUSH:\n            const { author, title, pages, genre } = payload.data;\n            return state.map(book =>\n                book.isbn === payload.id\n                    ? {\n                          ...book,\n                          author: author,\n                          title: title,\n                          genre: genre,\n                          pages: pages,\n                          editing: !book.editing\n                      }\n                    : book\n            );\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const ADD = \"ADD\";\nexport const UPDATE = \"UPDATE\";\nexport const DELETE = \"DELETE\";\nexport const PUSH = \"PUSH\";\n","import addBook from \"./addBook_action\";\nimport updateBook from \"./updateBook_action\";\nimport deleteBook from \"./deleteBook_action\";\nimport pushUpdate from \"./pushUpdate\";\n\nexport const Actions = {\n    addBook,\n    updateBook,\n    deleteBook,\n    pushUpdate\n};\n","import { ADD } from \"../arVariables\";\n\nconst addBook = payload => {\n    return {\n        type: ADD,\n        payload\n    };\n};\n\nexport default addBook;\n","import { UPDATE } from \"../arVariables\";\n\nconst updateBook = payload => {\n    return {\n        type: UPDATE,\n        payload\n    };\n};\n\nexport default updateBook;\n","import { DELETE } from \"../arVariables\";\n\nconst deleteBook = payload => {\n    return {\n        type: DELETE,\n        payload\n    };\n};\n\nexport default deleteBook;\n","import { PUSH } from \"../arVariables\";\n\nconst pushUpdate = payload => {\n    return {\n        type: PUSH,\n        payload\n    };\n};\n\nexport default pushUpdate;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions/index\";\nimport \"../scss/addbook.scss\";\n\nclass Addbook extends Component {\n    state = {\n        author: \"\",\n        title: \"\",\n        pages: \"\",\n        isbn: \"\",\n        genre: \"\"\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { author, title, pages, isbn, genre } = this.state;\n        const data = {\n            author,\n            title,\n            pages,\n            isbn,\n            genre,\n            editing: false\n        };\n        this.props.dispatch(Actions.addBook(data));\n        this.setState({\n            author: \"\",\n            title: \"\",\n            pages: \"\",\n            isbn: \"\",\n            genre: \"\"\n        });\n    };\n\n    handleAuthor = e => {\n        this.setState({\n            author: e.target.value\n        });\n    };\n\n    handleTitle = e => {\n        this.setState({\n            title: e.target.value\n        });\n    };\n\n    handlePages = e => {\n        this.setState({\n            pages: e.target.value\n        });\n    };\n\n    handleNum = e => {\n        this.setState({\n            isbn: e.target.value\n        });\n    };\n\n    handleGenre = e => {\n        this.setState({\n            genre: e.target.value\n        });\n    };\n    render() {\n        const { author, title, pages, isbn, genre } = this.state;\n        return (\n            <div className=\"form-cont\">\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        required\n                        value={author}\n                        onChange={this.handleAuthor}\n                        placeholder=\"Author of book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={title}\n                        onChange={this.handleTitle}\n                        placeholder=\"Title of book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={pages}\n                        onChange={this.handlePages}\n                        placeholder=\"Pages in book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={isbn}\n                        onChange={this.handleNum}\n                        placeholder=\"ISBN\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={genre}\n                        onChange={this.handleGenre}\n                        placeholder=\"Genre\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <button>Add Book</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(null)(Addbook);\n","import React, { Component } from \"react\";\nimport \"../scss/modal.scss\";\n\nclass Modal extends Component {\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.esc);\n    }\n\n    esc = e => {\n        if (e.key === \"Escape\") {\n            this.props.close();\n        }\n    };\n    render() {\n        const { author, title, pages, isbn, genre, open } = this.props;\n        const modal = open === true ? `modal open` : `modal`;\n        return (\n            <div className={modal}>\n                <section className=\"m-section\">\n                    <h1>{`Author: ${author}`}</h1>\n                    <p>{`Book Title: ${title}`}</p>\n\n                    <p>{`Page: ${pages}`}</p>\n                    <p>{`ISBN: ${isbn}`}</p>\n                    <p>{`Genre: ${genre}`}</p>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport { Actions } from \"../actions/index\";\nimport { connect } from \"react-redux\";\nimport Modal from \"./Modal\";\nimport \"../scss/book.scss\";\n\nclass Books extends Component {\n    state = {\n        open: false\n    };\n    clicked = () => {\n        this.setState({\n            open: true\n        });\n    };\n\n    close = () => {\n        this.setState({\n            open: false\n        });\n    };\n\n    render() {\n        const { author, title, pages, isbn, genre } = this.props.book;\n\n        const { dispatch } = this.props;\n        return (\n            <div onClick={this.clicked} className=\"book-cont\">\n                <h3>{author}</h3>\n                <p>{title}</p>\n\n                <button\n                    className=\"del\"\n                    onClick={() => dispatch(Actions.deleteBook({ id: isbn }))}\n                >\n                    Delete Book\n                </button>\n                <button\n                    className=\"update\"\n                    onClick={() => dispatch(Actions.updateBook({ id: isbn }))}\n                >\n                    Update Book\n                </button>\n\n                <Modal\n                    open={this.state.open}\n                    close={this.close}\n                    author={author}\n                    title={title}\n                    pages={pages}\n                    isbn={isbn}\n                    genre={genre}\n                />\n            </div>\n        );\n    }\n}\n\nexport default connect(null)(Books);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions/index\";\n\nclass Updatebook extends Component {\n    constructor(props) {\n        super(props);\n        const { author, title, pages, isbn, genre } = this.props.book;\n        this.state = {\n            author: author,\n            title: title,\n            pages: pages,\n            isbn: isbn,\n            genre: genre\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { author, title, pages, genre } = this.state;\n        const data = {\n            author,\n            title,\n            pages,\n            genre\n        };\n        this.props.dispatch(\n            Actions.pushUpdate({ id: this.props.book.isbn, data })\n        );\n    };\n\n    handleAuthor = e => {\n        this.setState({\n            author: e.target.value\n        });\n    };\n\n    handleTitle = e => {\n        this.setState({\n            title: e.target.value\n        });\n    };\n\n    handlePages = e => {\n        this.setState({\n            pages: e.target.value\n        });\n    };\n\n    handleNum = e => {\n        this.setState({\n            isbn: e.target.value\n        });\n    };\n\n    handleGenre = e => {\n        this.setState({\n            genre: e.target.value\n        });\n    };\n    render() {\n        const { author, title, pages, isbn, genre } = this.state;\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        required\n                        value={author}\n                        onChange={this.handleAuthor}\n                        placeholder=\"Author of book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={title}\n                        onChange={this.handleTitle}\n                        placeholder=\"Title of book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={pages}\n                        onChange={this.handlePages}\n                        placeholder=\"Pages in book\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={isbn}\n                        onChange={this.handleNum}\n                        placeholder=\"ISBN\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <input\n                        required\n                        value={genre}\n                        onChange={this.handleGenre}\n                        placeholder=\"Genre\"\n                        type=\"text\"\n                    />\n                    <br />\n                    <br />\n                    <button>Update Book</button>\n                </form>\n            </div>\n        );\n    }\n}\n\n// const mapStateToProps = state => {\n//     return { books: state };\n// };\n\nexport default connect(null)(Updatebook);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Books from \"./Book\";\nimport UpdateBook from \"./UpdateBook\";\nimport \"../scss/allbooks.scss\";\n\nclass AllBooks extends Component {\n    render() {\n        const { books } = this.state;\n        return (\n            <div className=\"allbooks-cont\">\n                <h2>All Books in Store</h2>\n\n                <section>\n                    {books.map(book =>\n                        book.editing ? (\n                            <UpdateBook key={book.isbn} book={book} />\n                        ) : (\n                            <Books key={book.isbn} book={book} />\n                        )\n                    )}\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { books: state };\n};\n\nexport default connect(mapStateToProps)(AllBooks);\n","import React, { Component } from \"react\";\nimport Addbook from \"./components/AddBook\";\nimport AllBooks from \"./components/AllBooks\";\nimport \"./scss/app.scss\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"main-cont\">\n                <h1>Book Store</h1>\n                <Addbook />\n\n                <AllBooks />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/reducers\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}